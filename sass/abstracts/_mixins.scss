
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

//MEDIA QUERY MANAGER
/*
0 -600px        Phone
600 - 900px     Tablet portrait
900 - 1200px    Tablet landscape
{1200 - 1800px} our normal styles
1800px +        Big desktop


breakpoint arg choices:
- phone
- tab-port
- tab-land
- big desktop

ORDER: Base + typography > general layout + grid > page layout > components
*/

//em is the best for queries   1em = 16px
@mixin respond($breakpoint) {
  @if $breakpoint == small-phone {
    @media only screen and (max-width: 28.12em) {@content}; //450px
  }
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {@content}; //600px/16px(browser font size) = 37.5em
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {@content}; //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {@content}; //1200px
  }

  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {@content}; //1800px
  }
}

@mixin hoverNone() {
  @media only screen and (max-width: 56.25em),
  only screen and (hover:none) {
    @content;
  }
}


@mixin running_line {
  /*<div class="mdl-progress-container">
<div class="mdl-progress">
<div class="progressbar bar" style="width: 0%;"></div>
<div class="bufferbar bar" style="width: 100%;"></div>
</div>
</div>
*/
  li a:hover,
  li a:active {
    .mdl-progress-container{
      visibility: visible;
      .mdl-progress {
        .bar{
          &.progressbar{
            animation-play-state : running;
            -webkit-animation-play-state: running;
          }
        }
      }
    }
  }

  @keyframes anim_progressbar{
    0% {
      left: 0%;
      width: 0;
    }
    25% {
      left: 0;
      width: 30%;
    }
    50% {
      left: 25%;
      width: 75%;
    }
    75% {
      left: 100%;
      width: 0;
    }
  }

  .mdl-progress-container{
    padding-top: .5rem;
    visibility: hidden;
  }
  .mdl-progress {
    position: relative;
    height: 2px;
    .bar{
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      width: 0;
      //transition: width .2s cubic-bezier(.4,0,.2,1);
      &.bufferbar {
        background-image: linear-gradient(to right,rgba(255,255,255,.7),rgba(255,255,255,.7)),linear-gradient(to right,#3f51b5 ,#3f51b5);
        z-index: 0;
        left: 0;
        display: none;
      }
      &.progressbar{
        background-color: $color-yellow;
        z-index: 1;
        left: 0;
        animation-name: anim_progressbar;
        animation-duration: 1.4s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
        animation-play-state : paused;
        //Safari 11.0.1 bug workaround
        -webkit-animation-play-state: running;
        &.green{
          background-color: #458d82;
        }
      }
    }
  }
}

@mixin card {
  position: relative;

  &:hover .player-front {
    transform: rotateY(180deg);
  }
  &:hover .player-back {
    transform: rotateY(360deg);
  }

  .player-face {
    width: 100%;
    height: 100%;
    transition: transform 1s;
    backface-visibility: hidden;

    & img {
      width: 100%;
      height: auto;
    }
  }

  .player-back {
    transform: rotateY(180deg);
    position: relative;
    width: 100%;
    height: auto;

    & figure {
      background-image: linear-gradient(rgba($color-black, 0.585), rgba($color-black, 0.585)), url(../img/players/ivanov-back.png);
      background-size: cover;
      background-position: center;

      /*hack to display background image above*/
      & img {
        visibility: hidden;
      }
    }
  }
}
